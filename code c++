#include<stdio.h>
#include<queue>

using namespace std;

struct node{
 bool visit = false;
 int value;
 int move;
 int i;
};

int countNodes = 0;
queue<node> qnodes;
int caseCount = 1;

void checkReachable(struct node nodeInit,struct node nodes[500],int edges[500][500]){
	
	if(nodeInit.move >= 0 && nodeInit.visit == false){
		
		nodes[nodeInit.i].visit = true;
		
		for(int i=0;i<countNodes;i++){
  	if(nodes[i].visit && edges[nodeInit.i][i] == 1){
				edges[nodeInit.i][i] = -1;
				edges[i][nodeInit.i] = -1;
			}
			if(edges[nodeInit.i][i] == 1 && nodeInit.move != 0){
				nodes[i].move = nodeInit.move - 1;
				qnodes.push(nodes[i]);
			}
		}
		
		if(!qnodes.empty()){
			
			node a = qnodes.front();
			qnodes.pop();			
			
			checkReachable(a,nodes,edges);
		}	
	}
	else if(!qnodes.empty()){
		checkReachable(qnodes.front(),nodes,edges);
		qnodes.pop();
	}	
}

int main(){
 
 	int manyEdges;
 
 	while(scanf("%d",&manyEdges) != EOF){
 		
 		if(manyEdges == 0) break;
		
		int edges[500][500] = {0};
		node nodes[500];
		int  a,b;
		
		countNodes = 0;
		int countEdges = 0;
		int flagA , flagB;
	
		while(scanf("%d %d",&a,&b) != EOF){
 			
 			flagA = -1;
			flagB = -1;
			
			for(int i=0;i<countNodes;i++){
				if(nodes[i].value == a) flagA = i;
			}
			
			if(flagA == -1){
				nodes[countNodes].value = a;
				nodes[countNodes].i = countNodes;
				flagA = countNodes;
				countNodes++;
			}
			
			for(int i=0;i<countNodes;i++){
				if(nodes[i].value == b) flagB = i;
			}
			
			if(flagB == -1){
				nodes[countNodes].value = b;
				nodes[countNodes].i = countNodes;
				flagB = countNodes;
				countNodes++;
			}
 		
 			edges[flagA][flagB] = 1;
 			edges[flagB][flagA] = 1;
 			
 			countEdges++;
			if(countEdges == manyEdges) break;
 		}
 		
 		while(scanf("%d %d",&a,&b) != EOF){
 		
 			for(int i=0;i<500;i++){
 				for(int j=0;j<500;j++){
 					if(edges[i][j] == -1){
 						edges[i][j] = 1;
 						edges[j][i] = 1;
					 }
 				}
			}
 		
		 	if(a == 0 && b == 0) break;
		 
			int getNode = -1;		 
		 
		 	for(int i=0;i<countNodes;i++){
		 		if(nodes[i].value == a){
		 			getNode = i;
		 			nodes[i].move = b;
		 			break;
				 }
			}
			
			int count = 0;
			
			if(getNode != -1){
				checkReachable(nodes[getNode],nodes,edges);
				
				for(int j=0;j<countNodes;j++){
					if(nodes[j].visit == false){
						count++;
					}
					else{
						nodes[j].visit = false;
					}
				}
			}
			else if(getNode == -1){
				count = countNodes;
			}
			
			printf("Case %d: %d nodes not reachable from node %d with TTL = %d.\n",caseCount,count,a,b);
			caseCount++;
 		}
	}
 
 	return 0;
}
